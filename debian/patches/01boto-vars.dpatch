#! /bin/sh /usr/share/dpatch/dpatch-run
## 01boto-vars.dpatch by  <az@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: fix #480417: allow aws_access_* coming from ~/.boto instead of env

@DPATCH@
diff -urNad duplicity-0.4.11~/src/backends.py duplicity-0.4.11/src/backends.py
--- duplicity-0.4.11~/src/backends.py	2008-05-10 11:18:03.000000000 +1000
+++ duplicity-0.4.11/src/backends.py	2008-05-10 11:23:56.451237638 +1000
@@ -689,9 +689,11 @@
 	Backend for Amazon's Simple Storage System, (aka Amazon S3), though
 	the use of the boto module, (http://code.google.com/p/boto/).
 
-	To make use of this backend you must export the environment variables
-	AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY with your Amazon Web 
-	Services key id and secret respectively.
+	To make use of this backend you must set aws_access_key_id
+	and aws_secret_access_key in your ~/.boto or /etc/boto.cfg 
+	with your Amazon Web Services key id and secret respectively.
+	Alternatively you can export the environment variables	
+	AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
 	"""
 
 	def __init__(self, parsed_url):
@@ -713,12 +715,6 @@
 			log.FatalError("This backend requires boto library, version 0.9d or later, "
 						   "(http://code.google.com/p/boto/).")
 
-		if not os.environ.has_key('AWS_ACCESS_KEY_ID'):
-			raise BackendException("The AWS_ACCESS_KEY_ID environment variable is not set.")
-
-		if not os.environ.has_key('AWS_SECRET_ACCESS_KEY'):
-			raise BackendException("The AWS_SECRET_ACCESS_KEY environment variable is not set.")
-
  		if parsed_url.scheme == 's3+http':
 			# Use the default Amazon S3 host.
  			self.conn = S3Connection()
