#! /bin/sh /usr/share/dpatch/dpatch-run
## 06signpassphrase.dpatch by  <az@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: fix for #644208 (ustream rev 780): no fallback for sign_passphrase 

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' duplicity-0.6.15~/CHANGELOG duplicity-0.6.15/CHANGELOG
--- duplicity-0.6.15~/CHANGELOG	2011-08-20 04:26:58.000000000 +1000
+++ duplicity-0.6.15/CHANGELOG	2011-10-05 10:10:58.127587304 +1000
@@ -1,3 +1,15 @@
+New in v0.6.16 (2011/09/??)
+----------------------------
+Enhancements:
+- usability enhancement: sign passphrase prompt has no second
+  verification prompt anymore, symmetric passphrases are still verified
+
+Bugs closed in this release:
+
+Merges:
+lp:~ed.so/duplicity/reuse-passphrase-for-signing-fix
+
+
 New in v0.6.15 (2011/08/19)
 ----------------------------
 Enhancements:
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' duplicity-0.6.15~/Changelog.GNU duplicity-0.6.15/Changelog.GNU
--- duplicity-0.6.15~/Changelog.GNU	2011-08-20 04:26:58.000000000 +1000
+++ duplicity-0.6.15/Changelog.GNU	2011-10-05 10:10:58.128587249 +1000
@@ -1,3 +1,8 @@
+2011-08-23 edso
+
+	- usability enhancement: sign passphrase prompt has no second 
+	  verification prompt anymore, symmetric passphrases are still verified
+
 2011-08-19  Kenneth Loafman  <kenneth@loafman.com>
 
 	fixes to unit tests to support SIGN_PASSPHRASE.
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' duplicity-0.6.15~/duplicity duplicity-0.6.15/duplicity
--- duplicity-0.6.15~/duplicity	2011-10-02 11:04:21.000000000 +1000
+++ duplicity-0.6.15/duplicity	2011-10-05 10:11:44.999036898 +1000
@@ -90,15 +90,15 @@
     ## if signing key is also an encryption key assume that the passphrase is identical
     if ( for_signing
          and globals.gpg_profile.sign_key in globals.gpg_profile.recipients
-         and globals.gpg_profile.passphrase is not None ):
-        log.Notice(_("Reuse already set PASSPHRASE as SIGNING_PASSPHRASE"))
-        return globals.gpg_profile.passphrase
+         and 'PASSPHRASE' in os.environ ):
+        log.Notice(_("Reuse configured PASSPHRASE as SIGN_PASSPHRASE"))
+        return os.environ['PASSPHRASE']
     ## if one encryption key is also the signing key assume that the passphrase is identical
     if ( not for_signing
          and globals.gpg_profile.sign_key in globals.gpg_profile.recipients
-         and globals.gpg_profile.signing_passphrase is not None ):
-        log.Notice(_("Reuse already set SIGNING_PASSPHRASE as PASSPHRASE"))
-        return globals.gpg_profile.signing_passphrase
+         and 'SIGN_PASSPHRASE' in os.environ ):
+        log.Notice(_("Reuse configured SIGN_PASSPHRASE as PASSPHRASE"))
+        return os.environ['SIGN_PASSPHRASE']
 
     # Next, verify we need to ask the user
 
@@ -1268,7 +1268,7 @@
         # the sign key can have a different passphrase than the encrypt
         # key, therefore request a passphrase
         if globals.gpg_profile.sign_key:
-            globals.gpg_profile.signing_passphrase = get_passphrase(3, action, True)
+            globals.gpg_profile.signing_passphrase = get_passphrase(1, action, True)
 
         # if there are no recipients (no --encrypt-key), it must be a
         # symmetric key. Therefore, confirm the passphrase
