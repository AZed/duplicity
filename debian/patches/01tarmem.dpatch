#! /bin/sh /usr/share/dpatch/dpatch-run
## 01tarmem.dpatch by  <az@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: fix for 657187 (upstream 896728), excessive mem consumption by tarfile

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' duplicity-0.6.17~/duplicity/util.py duplicity-0.6.17/duplicity/util.py
--- duplicity-0.6.17~/duplicity/util.py	2011-11-26 05:20:19.000000000 +1000
+++ duplicity-0.6.17/duplicity/util.py	2012-02-02 11:42:38.884770670 +1000
@@ -71,6 +71,10 @@
         else:
             raise
 
+class BlackHoleList(list):
+    def append(self, x):
+        pass
+
 class FakeTarFile:
     debug = 0
     def __iter__(self):
@@ -83,7 +87,12 @@
     # yet.  So we want to ignore ReadError exceptions, which are used to signal
     # this.
     try:
-        return tarfile.TarFile("arbitrary", mode, fp)
+        tf = tarfile.TarFile("arbitrary", mode, fp)
+        # Now we cause TarFile to not cache TarInfo objects.  It would end up
+        # consuming a lot of memory over the lifetime of our long-lasting
+        # signature files otherwise.
+        tf.members = BlackHoleList()
+        return tf
     except tarfile.ReadError:
         return FakeTarFile()
 
